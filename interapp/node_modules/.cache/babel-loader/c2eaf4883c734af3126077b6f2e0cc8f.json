{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/andrew/Masters/Fall 2020/Web Development/Project_2/jobapplicationtracker/interapp/src/AppCalendar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\n/*import { render } from \"react-dom\";*/\n\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport EventForm from \"./EventForm.js\";\nmoment.locale(\"en-GB\");\nconst localizer = momentLocalizer(moment); //empty object for now\n\nfunction AppCalendar(props) {\n  _s();\n\n  const [eventdata, setevents] = useState([]);\n  console.log(\"Get props\", props.invites);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"align-items-center p-3 px-md-4 mb-3 bg-white border-bottom shadow-sm\",\n      children: /*#__PURE__*/_jsxDEV(Calendar, {\n        localizer: localizer,\n        events: props.invites,\n        onSelectEvent: event => setevents(event),\n        startAccessor: \"start\",\n        endAccessor: \"end\",\n        style: {\n          height: 500,\n          width: \"100%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventForm, {\n      eventdata: eventdata\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n/*AppCalendar.propTypes = {\n  posts: AppCalendar.func.isRequired,\n};*/\n\n\n_s(AppCalendar, \"gkC6euzEQ/SgIstr5A9e/ER9QgE=\");\n\n_c = AppCalendar;\nexport default AppCalendar;\n/* */\n\nvar _c;\n\n$RefreshReg$(_c, \"AppCalendar\");","map":{"version":3,"sources":["/Users/andrew/Masters/Fall 2020/Web Development/Project_2/jobapplicationtracker/interapp/src/AppCalendar.js"],"names":["React","useState","useEffect","Calendar","momentLocalizer","moment","EventForm","locale","localizer","AppCalendar","props","eventdata","setevents","console","log","invites","event","height","width"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA;;AACA,SAASC,QAAT,EAAmBC,eAAnB,QAA0C,oBAA1C;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,mDAAP;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACAD,MAAM,CAACE,MAAP,CAAc,OAAd;AACA,MAAMC,SAAS,GAAGJ,eAAe,CAACC,MAAD,CAAjC,C,CACA;;AAEA,SAASI,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAC3B,QAAM,CAACC,SAAD,EAAYC,SAAZ,IAAyBX,QAAQ,CAAC,EAAD,CAAvC;AACCY,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBJ,KAAK,CAACK,OAA/B;AAEA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,sEAAf;AAAA,6BACE,QAAC,QAAD;AACE,QAAA,SAAS,EAAEP,SADb;AAEE,QAAA,MAAM,EAAEE,KAAK,CAACK,OAFhB;AAGE,QAAA,aAAa,EAAEC,KAAK,IAAIJ,SAAS,CAACI,KAAD,CAHnC;AAIE,QAAA,aAAa,EAAC,OAJhB;AAKE,QAAA,WAAW,EAAC,KALd;AAME,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE,GAAV;AAAeC,UAAAA,KAAK,EAAE;AAAtB;AANT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAaE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAIP;AAAxB;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;AACD;AACA;AACA;;;GAxBSF,W;;KAAAA,W;AA0BT,eAAeA,WAAf;AAEA","sourcesContent":["import React, { useState, useEffect } from \"react\";\n/*import { render } from \"react-dom\";*/\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport EventForm from \"./EventForm.js\";\nmoment.locale(\"en-GB\");\nconst localizer = momentLocalizer(moment);\n//empty object for now\n\nfunction AppCalendar(props) {\n const [eventdata, setevents] = useState([]);\n  console.log(\"Get props\", props.invites);\n\n  return (\n    <div>\n      <div className=\"align-items-center p-3 px-md-4 mb-3 bg-white border-bottom shadow-sm\">\n        <Calendar\n          localizer={localizer}\n          events={props.invites}\n          onSelectEvent={event => setevents(event)}\n          startAccessor=\"start\"\n          endAccessor=\"end\"\n          style={{ height: 500, width: \"100%\" }}\n        />\n    \n      </div>\n\n      <EventForm eventdata = {eventdata} />\n    </div>\n  );\n}\n/*AppCalendar.propTypes = {\n  posts: AppCalendar.func.isRequired,\n};*/\n\nexport default AppCalendar;\n\n/* */\n"]},"metadata":{},"sourceType":"module"}