{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/andrew/Masters/Fall 2020/Web Development/Project_2/jobapplicationtracker/interapp/src/AppCalendar.js\";\nimport React, { useState, useEffect } from \"react\";\n/*import { render } from \"react-dom\";*/\n\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport EventForm from \"./EventForm.js\";\nmoment.locale(\"en-ca\");\nconst localizer = momentLocalizer(moment); //empty object for now\n\nfunction AppCalendar(props) {\n  const renderPosts = () => {\n    return props.invites\n    /* .filter((p) => p.text && p.text.startsWith(search))*/\n    .map(p => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [p.start, \" said: \", p.title]\n    }, p._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }, this)\n    /*info= { \"start\": p.Date,\n            \"end\": p.Date,\n            \"title\": p.Company\n           };\n          myEventsList.push(info);*/\n    );\n  };\n\n  console.log(\"Get props\", props.invites);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"align-items-center p-3 px-md-4 mb-3 bg-white border-bottom shadow-sm\",\n      children: [/*#__PURE__*/_jsxDEV(Calendar, {\n        localizer: localizer,\n        events: props.invites,\n        startAccessor: \"start\",\n        endAccessor: \"end\",\n        style: {\n          height: 500,\n          width: \"100%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: renderPosts()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n/*AppCalendar.propTypes = {\n  posts: AppCalendar.func.isRequired,\n};*/\n\n\n_c = AppCalendar;\nexport default AppCalendar;\n/* */\n\nvar _c;\n\n$RefreshReg$(_c, \"AppCalendar\");","map":{"version":3,"sources":["/Users/andrew/Masters/Fall 2020/Web Development/Project_2/jobapplicationtracker/interapp/src/AppCalendar.js"],"names":["React","useState","useEffect","Calendar","momentLocalizer","moment","EventForm","locale","localizer","AppCalendar","props","renderPosts","invites","map","p","start","title","_id","console","log","height","width"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA;;AACA,SAASC,QAAT,EAAmBC,eAAnB,QAA0C,oBAA1C;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,mDAAP;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACAD,MAAM,CAACE,MAAP,CAAc,OAAd;AACA,MAAMC,SAAS,GAAGJ,eAAe,CAACC,MAAD,CAAjC,C,CACA;;AAEA,SAASI,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,QAAMC,WAAW,GAAG,MAAM;AACxB,WACED,KAAK,CAACE;AACJ;AADF,KAEGC,GAFH,CAEQC,CAAD,iBACH;AAAA,iBACGA,CAAC,CAACC,KADL,aACmBD,CAAC,CAACE,KADrB;AAAA,OAASF,CAAC,CAACG,GAAX;AAAA;AAAA;AAAA;AAAA;AAGA;AACV;AACA;AACA;AACA;AAVM,KADF;AAcD,GAfD;;AAgBAC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBT,KAAK,CAACE,OAA/B;AAEA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,sEAAf;AAAA,8BACE,QAAC,QAAD;AACE,QAAA,SAAS,EAAEJ,SADb;AAEE,QAAA,MAAM,EAAEE,KAAK,CAACE,OAFhB;AAGE,QAAA,aAAa,EAAC,OAHhB;AAIE,QAAA,WAAW,EAAC,KAJd;AAKE,QAAA,KAAK,EAAE;AAAEQ,UAAAA,MAAM,EAAE,GAAV;AAAeC,UAAAA,KAAK,EAAE;AAAtB;AALT;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAA,kBAAKV,WAAW;AAAhB;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAYE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;AACD;AACA;AACA;;;KAtCSF,W;AAwCT,eAAeA,WAAf;AAEA","sourcesContent":["import React, { useState, useEffect } from \"react\";\n/*import { render } from \"react-dom\";*/\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport EventForm from \"./EventForm.js\";\nmoment.locale(\"en-ca\");\nconst localizer = momentLocalizer(moment);\n//empty object for now\n\nfunction AppCalendar(props) {\n  const renderPosts = () => {\n    return (\n      props.invites\n        /* .filter((p) => p.text && p.text.startsWith(search))*/\n        .map((p) => (\n          <li key={p._id}>\n            {p.start} said: {p.title}\n          </li>\n          /*info= { \"start\": p.Date,\n                  \"end\": p.Date,\n                  \"title\": p.Company\n                 };\n                myEventsList.push(info);*/\n        ))\n    );\n  };\n  console.log(\"Get props\", props.invites);\n\n  return (\n    <div>\n      <div className=\"align-items-center p-3 px-md-4 mb-3 bg-white border-bottom shadow-sm\">\n        <Calendar\n          localizer={localizer}\n          events={props.invites}\n          startAccessor=\"start\"\n          endAccessor=\"end\"\n          style={{ height: 500, width: \"100%\" }}\n        />\n        <ul>{renderPosts()}</ul>\n      </div>\n\n      <EventForm />\n    </div>\n  );\n}\n/*AppCalendar.propTypes = {\n  posts: AppCalendar.func.isRequired,\n};*/\n\nexport default AppCalendar;\n\n/* */\n"]},"metadata":{},"sourceType":"module"}